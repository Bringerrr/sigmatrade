{"version":3,"sources":["components/LeftSidebar/index.jsx","containers/BuiltIn/index.jsx","containers/CatalogDsiaplay/index.jsx","containers/CatalogDisplay1.jsx","containers/MainHeader/index.jsx","App.js","serviceWorker.js","index.js"],"names":["LeftSidebarItems","type","value","color","LeftSidebar","className","map","item","href","style","backgroundColor","Item","Input","Search","Menu","menuItems","BuiltIn","useState","menuItem","setMenuItem","menu","index","onClick","key","width","placeholder","shape","icon","overlay","trigger","Links","label","to","Breadcrumb","CatalogDisplay","span","offset","link","activeStyle","fontWeight","exact","path","component","CatalogDisplay1","SubMenu","lowerMenuItems","target","rel","Divider","disabled","MainHeader","currentMenu","height","position","justify","align","fontSize","e","console","log","setState","current","selectedKeys","mode","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.181d8bd5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.scss'\r\n\r\nconst LeftSidebarItems=[\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Группы\"},\r\n    {type: 'text', value:\"Контакты\"},\r\n    {type: 'text', value:\"Профиль покупателя\"},\r\n\r\n    {type:'button', value:\"Распродажа\", color: '#8e3a88'},\r\n    {type:'button', value:\"Каталог продукции\", color: '#523bc5'},\r\n    {type:'button', value:\"Витрина продукции\", color: '#000000'},\r\n\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n]\r\n\r\nfunction LeftSidebar() {\r\n    return (\r\n        <div className=\"LeftSidebar\">\r\n            {LeftSidebarItems.map((item)=>{\r\n                if (item.type === \"text\") return <a href=\"#\" className=\"LeftSidebar_Item __Text\">{item.value}</a>\r\n                if (item.type === \"button\") return <a href=\"#\" className=\"LeftSidebar_Item __Button\" style={{backgroundColor: item.color}}>{item.value}</a>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;\r\n","import React, {useState} from \"react\";\r\nimport {Row, Column, Input, Button, Menu, Dropdown, Icon} from \"antd\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst {Search} = Input;\r\nconst {Item} = Menu;\r\n\r\nconst menuItems = [\"По возрастанию цены\", \"По убыванию цены\", \"По популярности\"];\r\n\r\nfunction BuiltIn() {\r\n  const [menuItem, setMenuItem] = useState(menuItems[0]);\r\n\r\n  const menu = (\r\n    <Menu>\r\n      {menuItems.map((item, index) => (\r\n        <Item onClick={() => setMenuItem(item)} key={index}>\r\n          <a href=\"#\">{item}</a>\r\n        </Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"BuiltIn\">\r\n      <div className=\"BuiltIn_Header\">\r\n        <h1>Встраиваемые вытяжки </h1>\r\n        <div className=\"BuiltIn_Header__CustomSearchInput\">\r\n          <Input style={{width: \"200px\"}} placeholder=\"Поиск по каталогу\" />\r\n          <Button className=\"searchButton\" type=\"primary\" shape=\"circle\" icon=\"search\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"BuiltIn_LowerHeader\">\r\n        <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n          <a className=\"ant-dropdown-link\">\r\n            {menuItem} <Icon type=\"down\" />\r\n          </a>\r\n        </Dropdown>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuiltIn;\r\n","import React from \"react\";\r\nimport LeftSidebar from \"../../components/LeftSidebar\";\r\nimport BuiltIn from \"../BuiltIn\";\r\nimport {Breadcrumb, Alert, Row, Col} from \"antd\";\r\nimport {Route, NavLink} from \"react-router-dom\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst Links = [\r\n  {label: \"Главная\", to: \"/\"},\r\n  {label: \"Каталог продукции\", to: \"/catalog\"},\r\n  {label: \"Встраиваемая техника\", to: \"/catalog/built-in-appliances\"},\r\n  {label: \"Вытяжки\", to: \"/catalog/built-in-appliances/range-hoods\"},\r\n  {label: \"Встраиваемые\", to: \"/catalog/built-in-appliances/range-hoods/built-in\"},\r\n];\r\n\r\nconst {Item} = Breadcrumb;\r\n\r\nfunction CatalogDisplay() {\r\n  return (\r\n    <div className=\"CatalogDisplay\">\r\n      <Row>\r\n        <Col span={3}>\r\n          <LeftSidebar />\r\n        </Col>\r\n        <Col offset={1} span={20}>\r\n          <Breadcrumb>\r\n            {Links.map(link => (\r\n              <Item>\r\n                <NavLink\r\n                  to={link.to}\r\n                  activeStyle={{\r\n                    fontWeight: \"bolder\",\r\n                  }}\r\n                >\r\n                  {link.label}\r\n                </NavLink>\r\n              </Item>\r\n            ))}\r\n           </Breadcrumb>\r\n          <div>\r\n            <Route exact path=\"/\" component={BuiltIn} />\r\n            {/* <Route path=\"/:filter\" component={CatalogDisplay1} /> */}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatalogDisplay;\r\n","import React from 'react';\r\n\r\nfunction CatalogDisplay1() {\r\n  return (\r\n    <div className=\"CatalogDisplay1\">\r\n     <h1>Catalog Display1 </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatalogDisplay1;\r\n","import React , { useRef, useEffect, useState } from 'react';\r\nimport { Row, Col, Icon, Menu, Dropdown } from 'antd';\r\n\r\nimport './index.scss'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n          1st menu item\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\r\n          2nd menu item\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"3\" disabled>\r\n        3rd menu item（disabled）\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\nconst lowerMenuItems = ['Встраиваемая техника', 'Крупная бытовая техника', 'Мелка бытовая техника', \"Посуда и аксессуары для кухни\", \"Техника для дома\", \"Мантехника для кухни\", \"Запасные части\" ]\r\n\r\nfunction MainHeader() {\r\n\r\n  const [currentMenu, setCurentMenu] = useState()\r\n\r\n  const handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n\r\n    return (\r\n        <div className=\"MainHeader\">\r\n          <div className=\"MainHeader_Upper\">\r\n            <Row style={{height: '100%', position: 'relative'}} type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n                <Col span={3}>\r\n                    <h3 className=\"MainHeader_Logo\">\r\n                        Сигма Трейд <span className=\"Logo_Add\">24</span>\r\n                    </h3>\r\n                </Col>\r\n              <Col offset={1} span={8}>\r\n                    <span className=\"MainHeader_YourManager\">\r\n                      <Icon style={{fontSize: '20px'}} type=\"user\" />Ваш менеджер: <span className=\"YouManager_Name\">Бабушкис Дмитрий</span>\r\n                    </span>\r\n                </Col>\r\n                <Col span={12}>\r\n              <Menu className=\"MainHeader_Upper_Right\" onClick={handleClick} selectedKeys={[currentMenu]} mode=\"horizontal\">\r\n                <SubMenu\r\n                    title={\r\n                      <span className=\"submenu-title-wrapper\">\r\n                        <Icon style={{fontSize: '20px', color:'white'}} type=\"user\" />\r\n                        Александр <Icon style={{fontSize: '8px', color:'white'}} type=\"down\" />\r\n                      </span>\r\n                    }\r\n                  >\r\n                      <Menu.Item key=\"setting:1\">Профиль</Menu.Item>\r\n                      <Menu.Item key=\"setting:4\">Выйти</Menu.Item>\r\n                  </SubMenu>\r\n                <Menu.Item key=\"mail\">\r\n                <Icon style={{fontSize: '20px', color:'white'}} type=\"user\" />\r\n                Александр <Icon style={{fontSize: '8px', color:'white'}} type=\"down\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"app\">\r\n                  <Icon type=\"appstore\" />\r\n                  Корзина\r\n                </Menu.Item>\r\n                <Menu.Item key=\"alipay\">\r\n                <Icon style={{fontSize: '20px', color:'white'}} type=\"question\" />\r\n                </Menu.Item>\r\n              </Menu>\r\n                </Col>\r\n            </Row>\r\n           </div>\r\n           <div className=\"MainHeader_Lower\">\r\n           <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n                <Col offset={4} span={20}>\r\n                  {lowerMenuItems.map((item)=>(<a>{item}</a>))}\r\n                </Col>\r\n            </Row>\r\n\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, {useRef, useEffect, useState} from 'react';\nimport './App.css';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport CatalogDisplay from './containers/CatalogDsiaplay'\nimport CatalogDisplay1 from './containers/CatalogDisplay1'\nimport MainHeader from './containers/MainHeader'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainHeader />\n        <BrowserRouter>\n      <div>\n        <Route exact path=\"/\" component={CatalogDisplay} />\n        <Route path=\"/:filter\" component={CatalogDisplay1} />\n      </div>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}