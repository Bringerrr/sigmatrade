{"version":3,"sources":["components/LeftSidebar/index.jsx","containers/CatalogDsiaplay/index.jsx","containers/CatalogDisplay1.jsx","containers/MainHeader/index.jsx","App.js","serviceWorker.js","index.js"],"names":["LeftSidebarItems","type","value","color","LeftSidebar","className","map","item","href","style","backgroundColor","CatalogDisplay","span","Item","CatalogDisplay1","menu","key","target","rel","Divider","disabled","lowerMenuItems","MainHeader","justify","align","fontSize","overlay","offset","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2f6ca13.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.scss'\r\n\r\nconst LeftSidebarItems=[\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Группы\"},\r\n    {type: 'text', value:\"Контакты\"},\r\n    {type: 'text', value:\"Профиль покупателя\"},\r\n\r\n    {type:'button', value:\"Распродажа\", color: '#8e3a88'},\r\n    {type:'button', value:\"Каталог продукции\", color: '#523bc5'},\r\n    {type:'button', value:\"Витрина продукции\", color: '#000000'},\r\n\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n    {type: 'text', value:\"Лента новостей\"},\r\n]\r\n\r\nfunction LeftSidebar() {\r\n    return (\r\n        <div className=\"LeftSidebar\">\r\n            {LeftSidebarItems.map((item)=>{\r\n                if (item.type === \"text\") return <a href=\"#\" className=\"LeftSidebar_Item__Text\">{item.value}</a>\r\n                if (item.type === \"button\") return <a href=\"#\" className=\"LeftSidebar_Item__Button\" style={{backgroundColor: item.color}}>{item.value}</a>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftSidebar;\r\n","import React from 'react';\r\nimport LeftSidebar from '../../components/LeftSidebar'\r\nimport { Breadcrumb, Alert ,Row, Col} from 'antd';\r\n\r\n\r\n\r\nimport './index.scss'\r\n\r\n\r\nfunction CatalogDisplay() {\r\n  return (\r\n    <div className=\"CatalogDisplay\">\r\n     <h1>Catalog Display wafawf </h1>\r\n     <Row>\r\n                <Col span={4}>\r\n                  <LeftSidebar />\r\n                </Col>\r\n                <Col span={8}>\r\n                <Breadcrumb>\r\n    <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n    <Breadcrumb.Item>\r\n      <a href=\"\">Application Center</a>\r\n    </Breadcrumb.Item>\r\n    <Breadcrumb.Item>\r\n      <a href=\"\">Application List</a>\r\n    </Breadcrumb.Item>\r\n    <Breadcrumb.Item>An Application</Breadcrumb.Item>\r\n  </Breadcrumb>\r\n                </Col>\r\n                <Col span={12} />\r\n            </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatalogDisplay;\r\n","import React from 'react';\r\n\r\nfunction CatalogDisplay1() {\r\n  return (\r\n    <div className=\"CatalogDisplay1\">\r\n     <h1>Catalog Display1 </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatalogDisplay1;\r\n","import React , { useRef, useEffect } from 'react';\r\nimport { Row, Col, Icon, Menu, Dropdown } from 'antd';\r\n\r\nimport './index.scss'\r\n\r\nconst menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.alipay.com/\">\r\n          1st menu item\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://www.taobao.com/\">\r\n          2nd menu item\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"3\" disabled>\r\n        3rd menu item（disabled）\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\nconst lowerMenuItems = ['Встраиваемая техника', 'Крупная бытовая техника', 'Мелка бытовая техника', \"Посуда и аксессуары для кухни\", \"Техника для дома\", \"Мантехника для кухни\", \"Запасные части\" ]\r\n\r\nfunction MainHeader() {\r\n\r\n    return (\r\n        <div className=\"MainHeader\">\r\n          <div className=\"MainHeader_Upper\">\r\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n                <Col span={4}>\r\n                    <h3 className=\"MainHeader_Logo\">\r\n                        Сигма Трейд <span className=\"Logo_Add\">24</span>\r\n                    </h3>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <span className=\"MainHeader_YourManager\">\r\n                      <Icon style={{fontSize: '20px'}} type=\"user\" />Ваш менеджер: <span className=\"YouManager_Name\">Бабушкис Дмитрий</span>\r\n                    </span>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <div className=\"MainHeader_Info\">\r\n                     <div>\r\n                         <Icon style={{fontSize: '20px', color:'white'}} type=\"user\" />\r\n                         <Dropdown overlay={menu}>\r\n                            <a className=\"ant-dropdown-link\" href=\"#\">\r\n                            Александр <Icon type=\"down\" />\r\n                            </a>\r\n                        </Dropdown>\r\n                        </div>\r\n                     <div>Мои заказы</div>\r\n                     <div>Корзина</div>\r\n                     <div><Icon style={{fontSize: '20px', color:'white'}} type=\"question\" /></div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n           </div>\r\n           <div className=\"MainHeader_Lower\">\r\n           <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n                <Col offset={4} span={20}>\r\n                  {lowerMenuItems.map((item)=>(<a>{item}</a>))}\r\n                </Col>\r\n            </Row>\r\n\r\n           </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, {useRef, useEffect, useState} from 'react';\nimport './App.css';\nimport './App.scss';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport CatalogDisplay from './containers/CatalogDsiaplay'\nimport CatalogDisplay1 from './containers/CatalogDisplay1'\nimport MainHeader from './containers/MainHeader'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainHeader />\n        <BrowserRouter>\n      <div>\n        <Route exact path=\"/\" component={CatalogDisplay} />\n        <Route path=\"/:filter\" component={CatalogDisplay1} />\n      </div>\n    </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}